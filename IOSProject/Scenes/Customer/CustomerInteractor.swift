//
//  CustomerInteractor.swift
//  IOSProject
//
//  Created by Jason Barrios on 3/20/19.
//  Copyright (c) 2019 Jason Barrios. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CustomerBusinessLogic {
    func requestDataSource(username: String)
}

protocol CustomerDataStore {
    var username: String? { get set }
    
    func getItemSelected(indexPath: IndexPath) -> CustomerModel
}

class CustomerInteractor: CustomerBusinessLogic, CustomerDataStore {
    var username: String?
    var customers = [CustomerModel]()
    
    var presenter: CustomerPresentationLogic?
    var customerWorker = KukoWorker(store: KukoAPI())
    
    func requestDataSource(username: String) {
        customerWorker.fetchCustomers(username: username) { (customers, error) in
            let response = Customer.DataSource.Response.init(items: customers, error: error)
            self.presenter?.presentDataSource(response: response)
        }
    }
    
    func getItemSelected(indexPath: IndexPath) -> CustomerModel {
        return customers[indexPath.row]
    }
    
}

