//
//  InvoiceDetailViewController.swift
//  IOSProject
//
//  Created by Jason Barrios on 3/23/19.
//  Copyright (c) 2019 Jason Barrios. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol InvoiceDetailDisplayLogic: class
{
  func displayUIInformation(viewModel: InvoiceDetail.UIInformation.ViewModel)
}

class InvoiceDetailViewController: UIViewController, InvoiceDetailDisplayLogic
{
  var interactor: InvoiceDetailBusinessLogic?
  var router: (NSObjectProtocol & InvoiceDetailRoutingLogic & InvoiceDetailDataPassing)?

  // MARK: Object lifecycle
    @IBOutlet weak var txtInvoiceInfo: UITextView!
    
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = InvoiceDetailInteractor()
    let presenter = InvoiceDetailPresenter()
    let router = InvoiceDetailRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
    override func viewDidLoad()
    {
        super.viewDidLoad()
        requestUIIformation()
    }
    
    // MARK: Request logic
    func requestUIIformation() {
        interactor?.requestUIInformation(request: InvoiceDetail.UIInformation.Request())
    }
    
    
    // MARK: Display logic
    func displayUIInformation(viewModel: InvoiceDetail.UIInformation.ViewModel) {
        let display = viewModel.displayedItem
        title = display.invoicenumber
        txtInvoiceInfo.text = "Subtotal: \(display.grossprice ?? 0)\n Total: \(display.netprice ?? 0)\n Clave MH: \(display.invoicecodemh ?? "")"
    }
}

